{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientsName","push","name","amount","ingredientsOutput","map","ig","React","createElement","style","textTransform","display","margin","border","padding","key","className","styles","Order","price","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sFCoCXC,EAlCD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAChCA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAG9B,IAAMI,EAAoBL,EAAYM,KAAI,SAACC,GACzC,OACEC,IAAAC,cAAA,QACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKT,EAAGJ,MAEPI,EAAGJ,KAAK,IAAEI,EAAGH,OAAO,QAI3B,OACEI,IAAAC,cAAA,OAAKQ,UAAWC,IAAOC,OACrBX,IAAAC,cAAA,SAAG,gBAAcJ,GACjBG,IAAAC,cAAA,SAAG,UACMD,IAAAC,cAAA,cAAQ,OAAKV,EAAMqB,U,+BCenBC,uBAhBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMxB,MAAMyB,OACpBC,QAASF,EAAMxB,MAAM0B,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAM,OAC3BC,EAASE,IAAoBL,EAAOE,QAI3BN,CAGbU,aAxCa,SAAAhC,GACb,IAAO8B,EAAgC9B,EAAhC8B,cAAeJ,EAAiB1B,EAAjB0B,MAAOE,EAAU5B,EAAV4B,OAE7BK,qBAAU,WACRH,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIJ,EAASf,IAAAC,cAACwB,IAAO,MAWrB,OAVKlC,EAAMyB,UACTD,EAASxB,EAAMwB,OAAOjB,KAAI,SAACR,GAAK,OAC9BU,IAAAC,cAACU,EAAK,CACJH,IAAKlB,EAAMoC,GACXlC,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAKZZ,IAAAC,cAAA,WAAMc,KAsBYY","file":"static/js/5.8e77615a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__zP97W\"};","import React from \"react\";\r\nimport styles from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientsName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientsName,\r\n      amount: props.ingredients[ingredientsName],\r\n    });\r\n  }\r\n  const ingredientsOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name}({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.Order}>\r\n      <p>Ingredients: {ingredientsOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {props.price}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nconst Orders = props => {\r\n  const {onFetchOrders, token, userId} = props;\r\n\r\n  useEffect(() => {\r\n    onFetchOrders(token, userId);\r\n  }, [onFetchOrders, token, userId]); \r\n    \r\n  let orders = <Spinner />;\r\n  if (!props.loading) {\r\n    orders = props.orders.map((order) => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={order.price}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return <div>{orders}</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}